#include "Header1.h"
#include "Source1.cpp"


int main() {
	system("chcp 1251");
	bool isRunning = true;
    List list;
	std::string fileName = "test.txt";

	do {
		std::cout << "\n____________________________________________________________________________\n";
		std::cout << "|ВОЗМОЖНЫЕ ДЕЙСТВИЯ:                                                       |\n";
		std::cout << "|__________________________________________________________________________|\n";
		std::cout << "|0  - Выход                                                                |\n";
		std::cout << "|1  - Добавить сведения о работнике                                        |\n";
		std::cout << "|2  - Удаление записи из списка по фамилии                                 |\n";
		std::cout << "|3  - Поиск работника по фамилии                                           |\n";
		std::cout << "|4  - Корректировка записи                                                 |\n";
		std::cout << "|5  - Просмотр списка в прямом направлении                                 |\n";
		std::cout << "|6  - Просмотр списка в обратном направлении                               |\n";
		std::cout << "|7  - Вывести общие затраты по цеху и среднюю зарплату работника этого цеха|\n";
		std::cout << "|8  - Вывести ведомость заработной платы рабочих цеха                      |\n";
		std::cout << "|9  - Отсортировать список по размеру зарплаты                             |\n";
		std::cout << "|10 - Отсортировать список по фамилии                                      |\n";
		std::cout << "|11 - Сохранить изменения в файл                                           |\n";
		std::cout << "|12 - Загрузить данные из файла                                            |\n";
		std::cout << "|__________________________________________________________________________|\n";
		std::cout << "Введите целое число для выбора одного из действий: ";

		int choice;

		if (!(std::cin >> choice)) {
			std::cerr << "Ошибка: Некорректный ввод." << std::endl;
			std::cin.clear();
			std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
			continue; 
		}

		if (choice < 0 || choice > 12) {
			std::cerr << "Ошибка: Введите число от 0 до 12." << std::endl;
			continue; 
		}

		// Выход из программы
        if (choice == 0) {
            isRunning = false;
        }

		// Добавление сведений о работнике
		if (choice == 1) {
			std::string surname;
			int tabelNum;
			std::string departmentName;
			double salary;

			std::cout << "Введите фамилию: ";
			if (!(std::cin >> surname)) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				std::cin.clear();
				std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
				continue;
			}
			std::cout << "Введите табельный номер: ";
			if (!(std::cin >> tabelNum)) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				std::cin.clear();
				std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
				continue;
			}
			std::cout << "Введите название цеха: ";
			if (!(std::cin >> departmentName)) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				std::cin.clear();
				std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
				continue;
			}
			std::cout << "Введите зарплату: ";
			if (!(std::cin >> salary)) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				std::cin.clear();
				std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
				continue;
			}

			list.insert(surname, tabelNum, departmentName, salary);
		}

		// Удаление записи из списка по фамилии
		if (choice == 2) {
			std::string surname;
			std::cout << "Введите фамилию: ";
			std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очистка буфера ввода
			std::getline(std::cin, surname);
			if (surname.empty()) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				continue;
			}

			if (!list.containsSurname(surname)) {
				std::cerr << "Ошибка: Фамилия \"" << surname << "\" не найдена в списке." << std::endl;
				continue;
			}

			list.removeSurname(surname);
			std::cout << "Запись с фамилией " << surname << " удалена." << std::endl;
		}

		// Поиск работника по фамилии
		if (choice == 3) {
			std::string surname;
			std::cout << "Введите фамилию: ";
			std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n'); // Очистка буфера ввода
			std::getline(std::cin, surname);
			if (surname.empty()) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				continue;
			}
			list.searchBySurname(surname);
		}

		// Корректировка записи
		if (choice == 4) {
			std::string surname;
			int tabelNum;
			std::string departmentName;
			double salary;

			std::cout << "Введите фамилию: ";
			if (!(std::cin >> surname)) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				std::cin.clear();
				std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
				continue;
			}

			// Проверяем наличие фамилии в списке
			if (!list.containsSurname(surname)) {
				std::cout << "Фамилии " << surname << " нет в списке." << std::endl;
				continue;
			}

			std::cout << "Введите табельный номер: ";
			if (!(std::cin >> tabelNum)) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				std::cin.clear();
				std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
				continue;
			}
			std::cout << "Введите название цеха: ";
			if (!(std::cin >> departmentName)) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				std::cin.clear();
				std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
				continue;
			}
			std::cout << "Введите зарплату: ";
			if (!(std::cin >> salary)) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				std::cin.clear();
				std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
				continue;
			}

			list.removeSurname(surname);
			list.insert(surname, tabelNum, departmentName, salary);
		}

		//Вызов метода для вывода списка в прямом направлении
		if (choice == 5) {
			list.print();
		}

		//Вызов метода для вывода списка в обратном направлении
		if (choice == 6) {
			list.printReverse();
		}

		// Вывод общих затрат по цеху и средней зарплаты работника этого цеха
		if (choice == 7) {
			std::string departmentName;
			std::cout << "Введите название цеха: ";
			if (!(std::cin >> departmentName)) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				std::cin.clear();
				std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
				continue;
			}

			// Проверяем наличие записи с указанным названием цеха в списке
			if (!list.containsDepartment(departmentName)) {
				std::cout << "Нет записей с указанным названием цеха в списке." << std::endl;
				continue;
			}

			list.allPayments(departmentName);
			list.averagePayment(departmentName);
		}
		// Вывод ведомости заработной платы рабочих цеха
		if (choice == 8) {
			std::string departmentName;
			std::cout << "Введите название цеха: ";
			if (!(std::cin >> departmentName)) {
				std::cerr << "Ошибка: Некорректный ввод." << std::endl;
				std::cin.clear();
				std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
				continue;
			}

			// Проверяем наличие записи с указанным названием цеха в списке
			if (!list.containsDepartment(departmentName)) {
				std::cout << "Нет записей с указанным названием цеха в списке." << std::endl;
				continue;
			}

			list.statement(departmentName);
		}

		// Сортировка списка по размеру зарплаты
		if (choice == 9) {
			list.sortSalary();
		}

		// Сортировка списка по фамилии
		if (choice == 10) {
			list.sortSurname();
		}

		// Сохранение изменений в файл
		if (choice == 11) {
			list.writeToFile(fileName);
		}

		// Загрузка данных из файла
		if (choice == 12) {
			list.readFromFile(fileName);
		}

	} while (isRunning);

	return 0;
}
